<mah:MetroWindow x:Class="DesktopApplicationLauncher.Wpf.Views.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:viewModels="clr-namespace:DesktopApplicationLauncher.Wpf.ViewModels"
                 xmlns:converters="clr-namespace:DesktopApplicationLauncher.Wpf.Converters"
                 xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
                 xmlns:views="clr-namespace:DesktopApplicationLauncher.Wpf.Views"
                 xmlns:controls="clr-namespace:DesktopApplicationLauncher.Wpf.Controls"
                 d:DataContext="{d:DesignInstance viewModels:MainViewModel}"
                 mc:Ignorable="d"
                 Title="App Launcher" 
                 ShowTitleBar="True" 
                 Height="450" 
                 Width="800"
                 ResizeMode="CanResizeWithGrip"
                 WindowStartupLocation="CenterScreen">
    <mah:MetroWindow.Resources>
        <converters:StringToVisibleIfNotNullOrWhiteSpaceConverter x:Key="StringToVisibleIfNotNullOrWhiteSpaceConverter" />
        <converters:StringToVisibleIfNullOrWhiteSpaceConverter x:Key="StringToVisibleIfNullOrWhiteSpaceConverter" />
        <converters:FilePathToFileNameConverter x:Key="FilePathToFileNameConverter" />
        <converters:ApplicationItemToIconConverter x:Key="ApplicationItemToIconConverter" />
        <converters:ApplicationItemVisibleIfNullOrWhiteSpaceConverter x:Key="ApplicationItemVisibleIfNullOrWhiteSpaceConverter" />
        <converters:VisibleIfNotNullConverter x:Key="VisibleIfNotNullConverter" />
    </mah:MetroWindow.Resources>
    <DockPanel>
        <Border DockPanel.Dock="Left"
                BorderThickness="0 1 1 0"
                BorderBrush="DarkGray"
                Width="{Binding AppViewWidth}">
            <DockPanel>
                <Border DockPanel.Dock="Bottom"
                        BorderThickness="1"
                        BorderBrush="DarkGray"
                        Height="50">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="8*" />
                            <ColumnDefinition Width="2*" />
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0"
                                Command="{Binding CloseAppViewCommand}">
                            <Button.ContentTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <icon:FeatherIcons Kind="ArrowLeft" />
                                    </StackPanel>
                                </DataTemplate>
                            </Button.ContentTemplate>
                        </Button>
                        <StackPanel
                            Grid.Column="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <TextBlock
                                Text="{Binding SelectedApp.CreateDate, StringFormat=Created at {0:t}}"
                                FontSize="11"
                                TextWrapping="Wrap"
                                TextAlignment="Center" />
                            <TextBlock
                                Text="{Binding SelectedApp.CreateDate, StringFormat={}{0:D}}"
                                FontSize="11"
                                TextWrapping="Wrap"
                                TextAlignment="Center" />
                        </StackPanel>
                        <Button Grid.Column="2"
                                Command="{Binding DeleteSelectedAppCommand}">
                            <Button.ContentTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <icon:FeatherIcons Kind="Trash2" />
                                    </StackPanel>
                                </DataTemplate>
                            </Button.ContentTemplate>
                        </Button>
                    </Grid>
                </Border>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Orientation="Vertical">
                        <StackPanel Margin="10">
                            <TextBox Text="{Binding SelectedApp.Name, UpdateSourceTrigger=PropertyChanged}"
                                     mah:TextBoxHelper.Watermark="Title"
                                     mah:TextBoxHelper.UseFloatingWatermark="True"
                                     FontWeight="Bold"
                                     FontSize="16"
                                     TextWrapping="Wrap"
                                     Margin="0 0 0 10" />
                            <ComboBox ItemsSource="{Binding Path=AppTypes}" 
                                      mah:TextBoxHelper.Watermark="Type"
                                      mah:TextBoxHelper.UseFloatingWatermark="True"
                                      DisplayMemberPath="Text"
                                      SelectedValuePath="Value"
                                      SelectedValue="{Binding Path=SelectedApp.ItemType}"
                                      IsEnabled="{Binding IsInInsertMode, Mode=OneWay}"
                                      Margin="0 0 0 10" />
                            <TextBox Text="{Binding SelectedApp.Description, UpdateSourceTrigger=PropertyChanged}"
                                     mah:TextBoxHelper.Watermark="Description"
                                     mah:TextBoxHelper.UseFloatingWatermark="True"
                                     FontWeight="Bold"
                                     FontSize="16"
                                     TextWrapping="Wrap"
                                     MinLines="3"
                                     MaxLines="4"
                                     Margin="0 0 0 10" />
                            <TextBlock TextWrapping="Wrap" mah:VisibilityHelper.IsVisible="{Binding IsFileType, Mode=OneWay}">
                                <Image Width="16"
                                       Height="16" 
                                       Source="{Binding SelectedApp, Converter={StaticResource ApplicationItemToIconConverter}}" 
                                       mah:VisibilityHelper.IsVisible="{Binding SelectedApp.Path, Converter={StaticResource StringToVisibleIfNotNullOrWhiteSpaceConverter}}"/>
                                <Hyperlink
                                    ToolTip="{Binding SelectedApp.Path}"
                                    Command="{Binding AddAppPathCommand}"
                                    mah:VisibilityHelper.IsVisible="{Binding SelectedApp.Path, Converter={StaticResource StringToVisibleIfNotNullOrWhiteSpaceConverter}}">
                                    <Run Text="{Binding SelectedApp.Path, Converter={StaticResource FilePathToFileNameConverter}}" />
                                </Hyperlink>
                                <Button 
                                    Command="{Binding AddAppPathCommand}"
                                    mah:VisibilityHelper.IsVisible="{Binding SelectedApp.Path, Converter={StaticResource StringToVisibleIfNullOrWhiteSpaceConverter}}">
                                    Add File To Execute
                                </Button>
                            </TextBlock>
                            <TextBox Text="{Binding SelectedApp.Arguments, UpdateSourceTrigger=PropertyChanged}"
                                     Margin="0 0 0 10"
                                     FontSize="14"
                                     mah:TextBoxHelper.UseFloatingWatermark="True"
                                     TextWrapping="Wrap"
                                     AcceptsTab="True"
                                     AcceptsReturn="True"
                                     mah:TextBoxHelper.Watermark="Arguments"
                                     MinLines="3" />
                            <Button 
                                Command="{Binding SaveAppCommand}"
                                Style="{StaticResource MahApps.Styles.Button.Square.Accent}"
                                mah:VisibilityHelper.IsVisible="{Binding SelectedApp, Converter={StaticResource ApplicationItemVisibleIfNullOrWhiteSpaceConverter}}">
                                Save App
                            </Button>
                            <ListBox ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     ScrollViewer.VerticalScrollBarVisibility="Disabled" />
                        </StackPanel>
                    </StackPanel>
                </ScrollViewer>
            </DockPanel>
        </Border>
        <Border BorderBrush="DarkGray" BorderThickness="0 1 0 0">
            <DockPanel>
                <Border DockPanel.Dock="Top"
                        BorderThickness="1"
                        BorderBrush="DarkGray"
                        Height="40">
                    <Button Command="{Binding AddAppCommand}">
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <icon:FeatherIcons Kind="Plus" />
                                </StackPanel>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>
                </Border>
                <Border DockPanel.Dock="Top"
                        Background="#FFF1F1F1"
                        Height="30">
                    <controls:BreadCrumb Items="{Binding Folders}" Command="{Binding FolderChangeCommand}"></controls:BreadCrumb>
                </Border>
                <ScrollViewer DockPanel.Dock="Bottom" Background="#FFF1F1F1">
                    <controls:DragPanel x:Name="DragPanel" 
                                        SwapItems="{Binding DataContext.SwapAppsCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainWindow}}}"
                                        ItemsMove="{Binding DataContext.AppsMoveCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainWindow}}}"
                                        Margin="10 5">
                        <ItemsControl ItemsSource="{Binding Apps}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <controls:DraggableBorder Margin="5" 
                                                              Width="80" 
                                                              Height="90"
                                                              CornerRadius="3"
                                                              Tag="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainWindow}}}">
                                        <Border.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Edit" 
                                                          Command="{Binding Parent.Tag.AddAppCommand, RelativeSource={RelativeSource Self}}"
                                                          CommandParameter="{Binding}" />
                                                <MenuItem Header="Delete" 
                                                          Command="{Binding Parent.Tag.DeleteAppCommand, RelativeSource={RelativeSource Self}}"
                                                          CommandParameter="{Binding}" />
                                                <MenuItem Header="Convert To Folder" 
                                                          Command="{Binding Parent.Tag.ConvertToFolderCommand, RelativeSource={RelativeSource Self}}"
                                                          CommandParameter="{Binding}" />
                                            </ContextMenu>
                                        </Border.ContextMenu>
                                        <StackPanel>
                                            <Border Width="40" Height="40" CornerRadius="5" Margin="2">
                                                <Border.Effect>
                                                    <DropShadowEffect ShadowDepth="1"/>
                                                </Border.Effect>
                                                <Border.Background>
                                                    <ImageBrush ImageSource="{Binding Converter={StaticResource ApplicationItemToIconConverter}}"
                                                                    mah:VisibilityHelper.IsVisible="{Binding Path, Converter={StaticResource StringToVisibleIfNotNullOrWhiteSpaceConverter}}" />
                                                </Border.Background>
                                            </Border>
                                            <Border BorderBrush="{x:Null}" Width="80" Height="45">
                                                <TextBlock HorizontalAlignment="Center"
                                                               VerticalAlignment="Center"
                                                               TextWrapping="Wrap"
                                                               TextTrimming="CharacterEllipsis"
                                                               Text="{Binding Name}" 
                                                               FontSize="10"/>
                                            </Border>
                                        </StackPanel>
                                        <Border.ToolTip>
                                            <ToolTip>
                                                <StackPanel>
                                                    <TextBlock Text="{Binding Name}" />
                                                    <TextBlock FontSize="9" 
                                                               Text="{Binding LastAccessedDate, StringFormat=Last Accessed: {0:dd-MM-yyyy HH:mm}}"
                                                               mah:VisibilityHelper.IsVisible="{Binding LastAccessedDate, Converter={StaticResource VisibleIfNotNullConverter}}"/>
                                                </StackPanel>
                                            </ToolTip>
                                        </Border.ToolTip>
                                        <Border.InputBindings>
                                            <MouseBinding 
                                                MouseAction="LeftDoubleClick"
                                                Command="{Binding DataContext.OpenAppCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type views:MainWindow}}}"
                                                CommandParameter="{Binding}" />
                                        </Border.InputBindings>
                                        <Border.Style>
                                            <Style TargetType="{x:Type Border}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ContextMenu.IsOpen, RelativeSource={RelativeSource Self}}" Value="True">
                                                        <Setter Property="RenderTransform">
                                                            <Setter.Value>
                                                                <ScaleTransform ScaleX="1.025" ScaleY="1.025"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="#c2cef6"  Opacity="0.3" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="BorderBrush" Value="Gainsboro"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                                        <Setter Property="RenderTransform">
                                                            <Setter.Value>
                                                                <ScaleTransform ScaleX="1.025" ScaleY="1.025"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="#c2cef6"  Opacity="0.3" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="BorderBrush" Value="Gainsboro"/>
                                                    </DataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="RenderTransform">
                                                            <Setter.Value>
                                                                <ScaleTransform ScaleX="1.025" ScaleY="1.025"/>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Background">
                                                            <Setter.Value>
                                                                <SolidColorBrush Color="#c2cef6"  Opacity="0.3" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="BorderBrush" Value="Gainsboro"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </controls:DraggableBorder>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </controls:DragPanel>
                </ScrollViewer>
            </DockPanel>
        </Border>
    </DockPanel>
</mah:MetroWindow>
