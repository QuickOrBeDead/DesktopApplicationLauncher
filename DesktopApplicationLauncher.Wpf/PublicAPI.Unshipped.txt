DesktopApplicationLauncher.Wpf.App
DesktopApplicationLauncher.Wpf.App.App() -> void
DesktopApplicationLauncher.Wpf.App.InitializeComponent() -> void
DesktopApplicationLauncher.Wpf.Commands.RelayCommand
DesktopApplicationLauncher.Wpf.Commands.RelayCommand.CanExecute(object parameter) -> bool
DesktopApplicationLauncher.Wpf.Commands.RelayCommand.CanExecuteChanged -> System.EventHandler
DesktopApplicationLauncher.Wpf.Commands.RelayCommand.Execute(object parameter) -> void
DesktopApplicationLauncher.Wpf.Commands.RelayCommand.RelayCommand(System.Action<object> executeAction, System.Func<object, bool> canExecuteFunc) -> void
DesktopApplicationLauncher.Wpf.Converters.ApplicationItemVisibleIfNullOrWhiteSpaceConverter
DesktopApplicationLauncher.Wpf.Converters.ApplicationItemVisibleIfNullOrWhiteSpaceConverter.ApplicationItemVisibleIfNullOrWhiteSpaceConverter() -> void
DesktopApplicationLauncher.Wpf.Converters.ApplicationItemVisibleIfNullOrWhiteSpaceConverter.Convert(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) -> object
DesktopApplicationLauncher.Wpf.Converters.ApplicationItemVisibleIfNullOrWhiteSpaceConverter.ConvertBack(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) -> object
DesktopApplicationLauncher.Wpf.Converters.FilePathToFileNameConverter
DesktopApplicationLauncher.Wpf.Converters.FilePathToFileNameConverter.Convert(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) -> object
DesktopApplicationLauncher.Wpf.Converters.FilePathToFileNameConverter.ConvertBack(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) -> object
DesktopApplicationLauncher.Wpf.Converters.FilePathToFileNameConverter.FilePathToFileNameConverter() -> void
DesktopApplicationLauncher.Wpf.Converters.FilePathToIconConverter
DesktopApplicationLauncher.Wpf.Converters.FilePathToIconConverter.Convert(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) -> object
DesktopApplicationLauncher.Wpf.Converters.FilePathToIconConverter.ConvertBack(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) -> object
DesktopApplicationLauncher.Wpf.Converters.FilePathToIconConverter.FilePathToIconConverter() -> void
DesktopApplicationLauncher.Wpf.Converters.StringToVisibleIfNotNullOrWhiteSpaceConverter
DesktopApplicationLauncher.Wpf.Converters.StringToVisibleIfNotNullOrWhiteSpaceConverter.Convert(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) -> object
DesktopApplicationLauncher.Wpf.Converters.StringToVisibleIfNotNullOrWhiteSpaceConverter.ConvertBack(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) -> object
DesktopApplicationLauncher.Wpf.Converters.StringToVisibleIfNotNullOrWhiteSpaceConverter.StringToVisibleIfNotNullOrWhiteSpaceConverter() -> void
DesktopApplicationLauncher.Wpf.Converters.StringToVisibleIfNullOrWhiteSpaceConverter
DesktopApplicationLauncher.Wpf.Converters.StringToVisibleIfNullOrWhiteSpaceConverter.Convert(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) -> object
DesktopApplicationLauncher.Wpf.Converters.StringToVisibleIfNullOrWhiteSpaceConverter.ConvertBack(object value, System.Type targetType, object parameter, System.Globalization.CultureInfo culture) -> object
DesktopApplicationLauncher.Wpf.Converters.StringToVisibleIfNullOrWhiteSpaceConverter.StringToVisibleIfNullOrWhiteSpaceConverter() -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Business.ApplicationService
DesktopApplicationLauncher.Wpf.Infrastructure.Business.ApplicationService.AddApplication(DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationAddModel addModel) -> int
DesktopApplicationLauncher.Wpf.Infrastructure.Business.ApplicationService.ApplicationService(DesktopApplicationLauncher.Wpf.Infrastructure.Data.IDbContext dbContext) -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Business.ApplicationService.ListAllApplications() -> System.Collections.Generic.IList<DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel>
DesktopApplicationLauncher.Wpf.Infrastructure.Business.IApplicationService
DesktopApplicationLauncher.Wpf.Infrastructure.Business.IApplicationService.AddApplication(DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationAddModel addModel) -> int
DesktopApplicationLauncher.Wpf.Infrastructure.Business.IApplicationService.ListAllApplications() -> System.Collections.Generic.IList<DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel>
DesktopApplicationLauncher.Wpf.Infrastructure.Business.ServiceLocator
DesktopApplicationLauncher.Wpf.Infrastructure.Data.IDbCollection<TEntity>
DesktopApplicationLauncher.Wpf.Infrastructure.Data.IDbCollection<TEntity>.Delete(object id) -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Data.IDbCollection<TEntity>.ExistsById(object id) -> bool
DesktopApplicationLauncher.Wpf.Infrastructure.Data.IDbCollection<TEntity>.GetById(object id) -> TEntity
DesktopApplicationLauncher.Wpf.Infrastructure.Data.IDbCollection<TEntity>.Insert(TEntity entity) -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Data.IDbCollection<TEntity>.List(System.Linq.Expressions.Expression<System.Func<TEntity, bool>> filter = null, System.Linq.Expressions.Expression<System.Func<TEntity, object>> orderBy = null, bool ascending = true) -> System.Collections.Generic.IList<TEntity>
DesktopApplicationLauncher.Wpf.Infrastructure.Data.IDbCollection<TEntity>.ListDto<TDto>(System.Linq.Expressions.Expression<System.Func<TEntity, TDto>> selectExpression, System.Linq.Expressions.Expression<System.Func<TEntity, bool>> filter = null, System.Linq.Expressions.Expression<System.Func<TEntity, object>> orderBy = null, bool ascending = true) -> System.Collections.Generic.IList<TDto>
DesktopApplicationLauncher.Wpf.Infrastructure.Data.IDbCollection<TEntity>.Update(System.Linq.Expressions.Expression<System.Func<TEntity, TEntity>> extend, System.Linq.Expressions.Expression<System.Func<TEntity, bool>> predicate) -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Data.IDbCollection<TEntity>.Update(TEntity entity) -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Data.IDbContext
DesktopApplicationLauncher.Wpf.Infrastructure.Data.IDbContext.Applications.get -> DesktopApplicationLauncher.Wpf.Infrastructure.Data.IDbCollection<DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application>
DesktopApplicationLauncher.Wpf.Infrastructure.Data.LiteDbCollection<TEntity>
DesktopApplicationLauncher.Wpf.Infrastructure.Data.LiteDbCollection<TEntity>.Delete(object id) -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Data.LiteDbCollection<TEntity>.ExistsById(object id) -> bool
DesktopApplicationLauncher.Wpf.Infrastructure.Data.LiteDbCollection<TEntity>.GetById(object id) -> TEntity
DesktopApplicationLauncher.Wpf.Infrastructure.Data.LiteDbCollection<TEntity>.Insert(TEntity entity) -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Data.LiteDbCollection<TEntity>.List(System.Linq.Expressions.Expression<System.Func<TEntity, bool>> filter = null, System.Linq.Expressions.Expression<System.Func<TEntity, object>> orderBy = null, bool ascending = true) -> System.Collections.Generic.IList<TEntity>
DesktopApplicationLauncher.Wpf.Infrastructure.Data.LiteDbCollection<TEntity>.ListDto<TDto>(System.Linq.Expressions.Expression<System.Func<TEntity, TDto>> selectExpression, System.Linq.Expressions.Expression<System.Func<TEntity, bool>> filter = null, System.Linq.Expressions.Expression<System.Func<TEntity, object>> orderBy = null, bool ascending = true) -> System.Collections.Generic.IList<TDto>
DesktopApplicationLauncher.Wpf.Infrastructure.Data.LiteDbCollection<TEntity>.LiteDbCollection(LiteDB.ILiteDatabase database) -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Data.LiteDbCollection<TEntity>.Update(System.Linq.Expressions.Expression<System.Func<TEntity, TEntity>> extend, System.Linq.Expressions.Expression<System.Func<TEntity, bool>> predicate) -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Data.LiteDbCollection<TEntity>.Update(TEntity entity) -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Data.LiteDbContext
DesktopApplicationLauncher.Wpf.Infrastructure.Data.LiteDbContext.Applications.get -> DesktopApplicationLauncher.Wpf.Infrastructure.Data.IDbCollection<DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application>
DesktopApplicationLauncher.Wpf.Infrastructure.Data.LiteDbContext.Dispose() -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Data.LiteDbContext.LiteDbContext(string dbName) -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.Application() -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.Arguments.get -> string
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.Arguments.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.CreateDate.get -> System.DateTime
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.CreateDate.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.Id.get -> int
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.Id.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.LastAccessedDate.get -> System.DateTime?
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.LastAccessedDate.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.Name.get -> string
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.Name.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.Path.get -> string
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.Path.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.SortOrder.get -> int
DesktopApplicationLauncher.Wpf.Infrastructure.Entities.Application.SortOrder.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationAddModel
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationAddModel.ApplicationAddModel() -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationAddModel.Arguments.get -> string
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationAddModel.Arguments.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationAddModel.Name.get -> string
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationAddModel.Name.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationAddModel.Path.get -> string
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationAddModel.Path.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel.ApplicationListItemModel() -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel.Arguments.get -> string
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel.Arguments.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel.CreateDate.get -> System.DateTime
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel.CreateDate.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel.Id.get -> int
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel.Id.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel.LastAccessedDate.get -> System.DateTime?
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel.LastAccessedDate.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel.Name.get -> string
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel.Name.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel.Path.get -> string
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel.Path.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel.PropertyChanged -> System.ComponentModel.PropertyChangedEventHandler
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationUpdateModel
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationUpdateModel.ApplicationUpdateModel() -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationUpdateModel.Arguments.get -> string
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationUpdateModel.Arguments.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationUpdateModel.Name.get -> string
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationUpdateModel.Name.set -> void
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationUpdateModel.Path.get -> string
DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationUpdateModel.Path.set -> void
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel.AddAppCommand.get -> System.Windows.Input.ICommand
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel.AddAppPathCommand.get -> System.Windows.Input.ICommand
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel.Apps.get -> System.Collections.ObjectModel.ObservableCollection<DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel>
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel.Apps.set -> void
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel.AppViewWidth.get -> int
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel.AppViewWidth.set -> void
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel.CloseAppViewCommand.get -> System.Windows.Input.ICommand
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel.DeleteAppCommand.get -> System.Windows.Input.ICommand
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel.MainViewModel(System.Windows.Window ownerWindow) -> void
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel.MainViewModel(System.Windows.Window ownerWindow, DesktopApplicationLauncher.Wpf.Infrastructure.Business.IApplicationService applicationService) -> void
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel.OpenAppCommand.get -> System.Windows.Input.ICommand
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel.SaveAppCommand.get -> System.Windows.Input.ICommand
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel.SelectedApp.get -> DesktopApplicationLauncher.Wpf.Infrastructure.Models.ApplicationListItemModel
DesktopApplicationLauncher.Wpf.ViewModels.MainViewModel.SelectedApp.set -> void
DesktopApplicationLauncher.Wpf.ViewModels.ViewModelBase
DesktopApplicationLauncher.Wpf.ViewModels.ViewModelBase.PropertyChanged -> System.ComponentModel.PropertyChangedEventHandler
DesktopApplicationLauncher.Wpf.ViewModels.ViewModelBase.ViewModelBase() -> void
DesktopApplicationLauncher.Wpf.Views.MainWindow
DesktopApplicationLauncher.Wpf.Views.MainWindow.InitializeComponent() -> void
DesktopApplicationLauncher.Wpf.Views.MainWindow.MainWindow() -> void
override DesktopApplicationLauncher.Wpf.App.OnExit(System.Windows.ExitEventArgs e) -> void
override DesktopApplicationLauncher.Wpf.App.OnStartup(System.Windows.StartupEventArgs e) -> void
static DesktopApplicationLauncher.Wpf.App.Main() -> void
static DesktopApplicationLauncher.Wpf.Infrastructure.Business.ServiceLocator.ApplicationService.get -> DesktopApplicationLauncher.Wpf.Infrastructure.Business.IApplicationService
virtual DesktopApplicationLauncher.Wpf.ViewModels.ViewModelBase.OnPropertyChanged(string propertyName = null) -> void